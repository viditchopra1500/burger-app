{"ast":null,"code":"import _objectSpread from \"/home/viditchopra/Desktop/my-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"/home/viditchopra/Desktop/my-app/src/containers/BurgerBuilder/BurgerBuilder.js\";\nimport React, { Component } from 'react';\nimport Aux from \"../../hoc/Aux\";\nimport Burger from '../../componenets/Burger/Burger';\nimport BuildControls from '../../componenets/Burger/BuildControls/BuildControls';\nimport Modal from '../../componenets/UI/Modal/Modal';\nimport OrderSummary from '../../componenets/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../componenets/UI/Spinner/Spinner';\nconst INGREDIENT_PRICES = {\n  salad: 0.5,\n  cheese: 0.4,\n  meat: 1.3,\n  bacon: 0.7\n};\n\nclass BurgerBuilder extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      ingredients: {\n        salad: 0,\n        bacon: 0,\n        cheese: 0,\n        meat: 0\n      },\n      totalPrice: 1,\n      purchasable: false,\n      purchasing: false,\n      loading: false\n    };\n\n    this.updatePurchaseState = ingredients => {\n      const sum = Object.keys(ingredients).map(igKey => {\n        return ingredients[igKey];\n      }).reduce((sum, el) => {\n        return sum + el;\n      }, 0);\n      this.setState({\n        purchasable: sum > 0\n      });\n    };\n\n    this.addIngredientHandler = type => {\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      updatedIngredients[type] = this.state.ingredients[type] + 1;\n      const newPrice = this.state.totalPrice + INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.removeIngredientHandler = type => {\n      const updatedIngredients = _objectSpread({}, this.state.ingredients);\n\n      if (this.state.ingredients[type] === 0) {\n        return;\n      }\n\n      updatedIngredients[type] = this.state.ingredients[type] - 1;\n      const newPrice = this.state.totalPrice - INGREDIENT_PRICES[type];\n      this.setState({\n        totalPrice: newPrice,\n        ingredients: updatedIngredients\n      });\n      this.updatePurchaseState(updatedIngredients);\n    };\n\n    this.purchaseHandler = () => {\n      this.setState({\n        purchasing: true\n      });\n    };\n\n    this.purchaseCancelHandler = () => {\n      this.setState({\n        purchasing: false\n      });\n    };\n\n    this.purchaseContinueHandler = () => {\n      this.setState({\n        loading: true\n      });\n      const order = {\n        ingredients: this.state.ingredients,\n        price: this.state.totalPrice,\n        customer: {\n          name: \"vidit chopra\",\n          address: {\n            street: '10/c singar nagar',\n            zipCode: '226005',\n            country: 'India'\n          },\n          email: 'test@test.com'\n        },\n        deliveryMethod: 'fastest'\n      };\n      axios.post('/orders.json', order).then(response => {\n        this.setState({\n          loading: false\n        });\n      }).catch( // error=>console.log(error))\n      this.setState({\n        loading: false\n      }));\n    };\n  }\n\n  render() {\n    const disabledInfo = _objectSpread({}, this.state.ingredients);\n\n    for (let key in disabledInfo) {\n      disabledInfo[key] = disabledInfo[key] <= 0;\n    }\n\n    let orderSummary = React.createElement(OrderSummary, {\n      price: this.state.totalPrice,\n      purchaseCancelled: this.purchaseCancelHandler,\n      purchaseContinue: this.purchaseContinueHandler,\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 98\n      },\n      __self: this\n    });\n\n    if (this.state.loading) {\n      orderSummary = React.createElement(Spinner, {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 105\n        },\n        __self: this\n      });\n    }\n\n    return React.createElement(Aux, {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 108\n      },\n      __self: this\n    }, React.createElement(Modal, {\n      show: this.state.purchasing,\n      modalClosed: this.purchaseCancelHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 109\n      },\n      __self: this\n    }, orderSummary), React.createElement(Burger, {\n      ingredients: this.state.ingredients,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 112\n      },\n      __self: this\n    }), React.createElement(BuildControls, {\n      ingredientAdded: this.addIngredientHandler,\n      ingredientRemoved: this.removeIngredientHandler,\n      disabled: disabledInfo,\n      price: this.state.totalPrice,\n      purchasable: this.state.purchasable,\n      ordered: this.purchaseHandler,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 113\n      },\n      __self: this\n    }));\n  }\n\n}\n\nexport default BurgerBuilder;","map":{"version":3,"sources":["/home/viditchopra/Desktop/my-app/src/containers/BurgerBuilder/BurgerBuilder.js"],"names":["React","Component","Aux","Burger","BuildControls","Modal","OrderSummary","axios","Spinner","INGREDIENT_PRICES","salad","cheese","meat","bacon","BurgerBuilder","state","ingredients","totalPrice","purchasable","purchasing","loading","updatePurchaseState","sum","Object","keys","map","igKey","reduce","el","setState","addIngredientHandler","type","updatedIngredients","newPrice","removeIngredientHandler","purchaseHandler","purchaseCancelHandler","purchaseContinueHandler","order","price","customer","name","address","street","zipCode","country","email","deliveryMethod","post","then","response","catch","render","disabledInfo","key","orderSummary"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\nimport Aux from \"../../hoc/Aux\";\nimport Burger from '../../componenets/Burger/Burger';\nimport BuildControls from '../../componenets/Burger/BuildControls/BuildControls';\nimport Modal from '../../componenets/UI/Modal/Modal';\nimport OrderSummary from '../../componenets/Burger/OrderSummary/OrderSummary';\nimport axios from '../../axios-orders';\nimport Spinner from '../../componenets/UI/Spinner/Spinner';\n\nconst INGREDIENT_PRICES={\n    salad:0.5,\n    cheese:0.4,\n    meat:1.3,\n    bacon:0.7\n}\nclass BurgerBuilder extends Component{ \nstate={\n    ingredients:{\n        salad:0,\n        bacon:0,\n        cheese:0,\n        meat:0\n    },\n    totalPrice:1,\n    purchasable:false,\n    purchasing:false,\n    loading:false\n}\nupdatePurchaseState=(ingredients)=> {\nconst sum=Object.keys(ingredients).map((igKey)=>{\n    return ingredients[igKey]\n}).reduce((sum,el)=>{\n    return sum+el;\n},0)\nthis.setState({purchasable:sum>0});\n}\n\naddIngredientHandler=(type)=>{\n    const updatedIngredients={...this.state.ingredients}\n    updatedIngredients[type]=this.state.ingredients[type]+1;\n    const newPrice=this.state.totalPrice+INGREDIENT_PRICES[type]\n    this.setState({\n        totalPrice:newPrice,\n        ingredients:updatedIngredients\n    })\n    this.updatePurchaseState(updatedIngredients);\n}\nremoveIngredientHandler=(type)=>{\n    const updatedIngredients={...this.state.ingredients}\n    if(this.state.ingredients[type]===0)\n    {\n        return;\n    }\n    updatedIngredients[type]=this.state.ingredients[type]-1;\n    const newPrice=this.state.totalPrice-INGREDIENT_PRICES[type]\n    this.setState({\n        totalPrice:newPrice,\n        ingredients:updatedIngredients\n    })\n    this.updatePurchaseState(updatedIngredients);\n}\npurchaseHandler=()=>{\n    this.setState({purchasing:true})\n}\npurchaseCancelHandler=()=>{\n    this.setState({purchasing:false})\n}\npurchaseContinueHandler=()=>\n{\n    this.setState({loading :true})\n    const order={\n        ingredients:this.state.ingredients,\n        price:this.state.totalPrice,\n        customer:{\n            name:\"vidit chopra\",\n            address:{\n                street:'10/c singar nagar',\n                zipCode:'226005',\n                country:'India'\n            },\n            email:'test@test.com'\n        },\n        deliveryMethod:'fastest'\n    }\n    axios.post('/orders.json',order).then(response=>{\n    this.setState({loading:false})}).catch(\n        // error=>console.log(error))\n        this.setState({loading:false}))\n}\nrender(){\n    const disabledInfo={\n        ...this.state.ingredients\n    }\n    for(let key in disabledInfo)\n    {\n        disabledInfo[key]=(disabledInfo[key]<=0)\n    }\n    let orderSummary=<OrderSummary \n    price={this.state.totalPrice}\n    purchaseCancelled={this.purchaseCancelHandler}\n    purchaseContinue={this.purchaseContinueHandler}\n    ingredients={this.state.ingredients}/>\n\n    if(this.state.loading){\n        orderSummary=<Spinner/>\n    }\n    return(\n            <Aux>\n                <Modal show={this.state.purchasing} modalClosed={this.purchaseCancelHandler}>\n                {orderSummary}\n                </Modal>\n                <Burger ingredients={this.state.ingredients} />\n                <BuildControls \n                ingredientAdded={this.addIngredientHandler}\n                ingredientRemoved={this.removeIngredientHandler}\n                disabled={disabledInfo}\n                price={this.state.totalPrice}\n                purchasable={this.state.purchasable}\n                ordered={this.purchaseHandler}/>\n            </Aux>\n        )\n}\n}\nexport default BurgerBuilder;"]},"metadata":{},"sourceType":"module"}