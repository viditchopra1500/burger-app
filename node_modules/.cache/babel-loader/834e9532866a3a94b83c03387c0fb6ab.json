{"ast":null,"code":"var _jsxFileName = \"/home/viditchopra/Desktop/my-app/src/componenets/Burger/Burger.js\";\nimport React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient.js';\n\nconst burger = props => {\n  let transformedIngredients = Object.keys(props.ingredients).map(igKey => [...Array(props.ingredients[igKey])].map((_, i) => React.createElement(BurgerIngredient, {\n    type: igKey,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7\n    },\n    __self: this\n  }))).reduce((arr, el) => {\n    return arr.concat(el);\n  }, []);\n\n  if (transformedIngredients.length === 0) {\n    transformedIngredients = React.createElement(\"p\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 13\n      },\n      __self: this\n    }, \"Please start adding ingredients\");\n  }\n\n  return React.createElement(\"div\", {\n    className: classes.Burger,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16\n    },\n    __self: this\n  }, React.createElement(BurgerIngredient, {\n    type: \"bread-top\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17\n    },\n    __self: this\n  }), transformedIngredients, React.createElement(BurgerIngredient, {\n    type: \"bread-bottom\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19\n    },\n    __self: this\n  }));\n};\n\nexport default burger;","map":{"version":3,"sources":["/home/viditchopra/Desktop/my-app/src/componenets/Burger/Burger.js"],"names":["React","classes","BurgerIngredient","burger","props","transformedIngredients","Object","keys","ingredients","map","igKey","Array","_","i","reduce","arr","el","concat","length","Burger"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,OAAP,MAAoB,qBAApB;AACA,OAAOC,gBAAP,MAA6B,wCAA7B;;AACA,MAAMC,MAAM,GAAEC,KAAD,IAAS;AAClB,MAAIC,sBAAsB,GAACC,MAAM,CAACC,IAAP,CAAYH,KAAK,CAACI,WAAlB,EAA+BC,GAA/B,CACtBC,KAAD,IAAU,CAAC,GAAGC,KAAK,CAACP,KAAK,CAACI,WAAN,CAAkBE,KAAlB,CAAD,CAAT,EAAqCD,GAArC,CACN,CAACG,CAAD,EAAGC,CAAH,KAAQ,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAEH,KAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADa,EAE0BI,MAF1B,CAGf,CAACC,GAAD,EAAKC,EAAL,KAAU;AACN,WAAOD,GAAG,CAACE,MAAJ,CAAWD,EAAX,CAAP;AACH,GALc,EAKb,EALa,CAA3B;;AAMA,MAAGX,sBAAsB,CAACa,MAAvB,KAAgC,CAAnC,EACA;AACIb,IAAAA,sBAAsB,GAAC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,yCAAvB;AACH;;AACL,SACA;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACkB,MAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADA,EAECd,sBAFD,EAGA,oBAAC,gBAAD;AAAkB,IAAA,IAAI,EAAC,cAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAHA,CADA;AAOC,CAlBD;;AAmBA,eAAeF,MAAf","sourcesContent":["import React from 'react';\nimport classes from './Burger.module.css';\nimport BurgerIngredient from './BurgerIngredient/BurgerIngredient.js'\nconst burger=(props)=>{\n    let transformedIngredients=Object.keys(props.ingredients).map(\n        (igKey)=>([...Array(props.ingredients[igKey])].map(\n            (_,i)=>(<BurgerIngredient type={igKey}/>)))).reduce(\n                (arr,el)=>{\n                    return arr.concat(el)\n                },[]);\n    if(transformedIngredients.length===0)\n    {\n        transformedIngredients=<p>Please start adding ingredients</p>\n    }\nreturn(\n<div className={classes.Burger}>\n<BurgerIngredient type=\"bread-top\"/>\n{transformedIngredients}\n<BurgerIngredient type=\"bread-bottom\"/>\n</div>\n)\n};\nexport default burger; "]},"metadata":{},"sourceType":"module"}